'use client';

import React, { useState, useRef, useEffect, useCallback } from 'react';

// 筆畫路徑資料 (從SVG提取的"我"字筆順)
const STROKE_PATHS = [
  "M158.6279296875 157.1337890625Q151.1572265625 159.6240234375 147.421875 160.74462890625Q143.6865234375 161.865234375 129.36767578125 165.22705078125Q115.048828125 168.5888671875 110.3173828125 169.0869140625L95.625 170.830078125Q89.8974609375 171.5771484375 88.77685546875 169.46044921875Q87.65625 167.34375 93.3837890625 164.853515625L106.58203125 159.1259765625L122.021484375 152.900390625Q132.978515625 148.41796875 146.1767578125 141.1962890625Q159.375 133.974609375 168.5888671875 127.62451171875Q177.802734375 121.2744140625 184.40185546875 115.67138671875Q191.0009765625 110.068359375 195.10986328125 105.5859375Q199.21875 101.103515625 200.33935546875 97.8662109375Q201.4599609375 94.62890625 202.20703125 93.50830078125Q202.9541015625 92.3876953125 205.9423828125 92.138671875Q208.4326171875 92.138671875 212.666015625 94.3798828125Q216.8994140625 96.62109375 222.626953125 100.48095703125Q228.3544921875 104.3408203125 232.71240234375 108.94775390625Q237.0703125 113.5546875 236.3232421875 117.041015625Q235.576171875 120.029296875 233.21044921875 121.39892578125Q230.8447265625 122.7685546875 226.8603515625 124.2626953125Q222.8759765625 125.7568359375 219.638671875 127.37548828125Q216.4013671875 128.994140625 209.9267578125 132.2314453125L193.9892578125 140.44921875L180.791015625 147.421875L158.6279296875 157.1337890625",
  "M166.0986328125 236.572265625Q159.1259765625 238.06640625 151.6552734375 239.8095703125Q144.1845703125 241.552734375 132.35595703125 244.66552734375Q120.52734375 247.7783203125 112.8076171875 250.2685546875Q105.087890625 252.7587890625 101.8505859375 252.7587890625Q97.3681640625 253.0078125 89.150390625 250.517578125Q80.9326171875 248.02734375 74.9560546875 244.7900390625Q68.9794921875 241.552734375 67.11181640625 237.69287109375Q65.244140625 233.8330078125 66.11572265625 232.46337890625Q66.9873046875 231.09375 74.70703125 229.8486328125L93.3837890625 227.109375L122.021484375 222.8759765625Q143.1884765625 219.8876953125 147.6708984375 218.8916015625L166.0986328125 215.4052734375L188.5107421875 211.9189453125Q199.9658203125 210.17578125 204.82177734375 209.4287109375Q209.677734375 208.681640625 236.3232421875 203.701171875L270.9375 197.4755859375L285.380859375 194.736328125L308.291015625 189.755859375Q319.248046875 188.0126953125 324.9755859375 187.0166015625L347.138671875 183.0322265625Q362.3291015625 180.791015625 370.17333984375 178.5498046875Q378.017578125 176.30859375 381.005859375 176.30859375Q385.7373046875 176.5576171875 389.47265625 178.42529296875Q393.2080078125 180.29296875 398.935546875 184.0283203125Q404.6630859375 187.763671875 406.904296875 190.37841796875Q409.1455078125 192.9931640625 408.896484375 194.736328125Q408.3984375 196.4794921875 404.912109375 198.09814453125Q401.42578125 199.716796875 395.44921875 200.21484375L377.51953125 201.4599609375Q369.052734375 202.20703125 350.625 204.32373046875Q332.197265625 206.4404296875 331.9482421875 206.4404296875L310.78125 208.681640625L288.8671875 212.666015625Q279.404296875 214.658203125 274.921875 215.4052734375L240.556640625 221.630859375L208.681640625 227.8564453125L189.2578125 231.3427734375L166.0986328125 236.572265625",
  "M166.0986328125 215.4052734375Q165.6005859375 207.9345703125 165.22705078125 201.708984375Q164.853515625 195.4833984375 163.73291015625 184.5263671875Q162.6123046875 173.5693359375 161.3671875 168.33984375L158.6279296875 157.1337890625L180.791015625 147.421875Q185.5224609375 149.1650390625 188.0126953125 150.53466796875Q190.5029296875 151.904296875 192.37060546875 153.896484375Q194.23828125 155.888671875 194.61181640625 157.25830078125Q194.9853515625 158.6279296875 193.740234375 162.48779296875Q192.4951171875 166.34765625 191.9970703125 170.33203125L190.5029296875 180.791015625Q189.0087890625 191.4990234375 189.0087890625 195.9814453125L188.5107421875 211.9189453125L189.2578125 231.3427734375L189.0087890625 289.6142578125L189.0087890625 307.5439453125Q189.5068359375 325.4736328125 189.88037109375 339.79248046875Q190.25390625 354.111328125 190.5029296875 370.7958984375Q190.751953125 387.48046875 190.5029296875 397.44140625Q190.0048828125 410.1416015625 188.26171875 420.22705078125Q186.5185546875 430.3125 181.2890625 439.65087890625Q176.0595703125 448.9892578125 169.21142578125 453.09814453125Q162.36328125 457.20703125 158.6279296875 455.712890625Q155.888671875 454.9658203125 152.02880859375 448.61572265625Q148.1689453125 442.265625 143.935546875 437.5341796875Q139.7021484375 432.802734375 133.974609375 427.0751953125Q128.2470703125 421.34765625 124.7607421875 418.1103515625L114.3017578125 409.1455078125Q110.3173828125 406.1572265625 111.68701171875 404.04052734375Q113.056640625 401.923828125 116.2939453125 402.6708984375L127.5 405.6591796875L138.45703125 408.3984375Q147.1728515625 410.888671875 149.6630859375 411.1376953125Q153.1494140625 411.6357421875 155.51513671875 410.51513671875Q157.880859375 409.39453125 159.25048828125 403.29345703125Q160.6201171875 397.1923828125 161.3671875 386.982421875Q162.1142578125 376.7724609375 162.98583984375 363.94775390625Q163.857421875 351.123046875 164.1064453125 343.4033203125L164.853515625 318.9990234375L164.853515625 298.330078125L166.0986328125 236.572265625L166.0986328125 215.4052734375",
  "M189.0087890625 289.6142578125L243.7939453125 267.94921875Q248.2763671875 266.2060546875 250.14404296875 269.1943359375Q252.01171875 272.1826171875 247.2802734375 274.921875L189.0087890625 307.5439453125L164.853515625 318.9990234375L118.2861328125 344.150390625L99.8583984375 354.609375Q89.8974609375 360.3369140625 85.53955078125 363.8232421875Q81.181640625 367.3095703125 78.69140625 368.18115234375Q76.201171875 369.052734375 71.4697265625 367.8076171875Q67.236328125 366.8115234375 63.12744140625 364.3212890625Q59.0185546875 361.8310546875 52.0458984375 356.8505859375Q45.0732421875 351.8701171875 42.45849609375 347.01416015625Q39.84375 342.158203125 41.5869140625 339.4189453125Q42.5830078125 337.9248046875 44.69970703125 337.4267578125Q46.81640625 336.9287109375 52.66845703125 336.80419921875Q58.5205078125 336.6796875 64.74609375 335.06103515625Q70.9716796875 333.4423828125 84.169921875 329.08447265625Q97.3681640625 324.7265625 103.3447265625 322.236328125L164.853515625 298.330078125L189.0087890625 289.6142578125",
  "M285.380859375 194.736328125Q282.890625 178.30078125 281.89453125 169.833984375L277.1630859375 137.958984375L272.1826171875 102.3486328125Q270.1904296875 89.8974609375 268.32275390625 82.67578125Q266.455078125 75.4541015625 263.59130859375 68.60595703125Q260.7275390625 61.7578125 257.61474609375 56.15478515625Q254.501953125 50.5517578125 254.12841796875 47.43896484375Q253.7548828125 44.326171875 255.2490234375 41.96044921875Q256.7431640625 39.5947265625 262.7197265625 39.345703125Q266.2060546875 39.345703125 274.423828125 41.5869140625L288.8671875 45.5712890625Q295.341796875 47.8125 298.70361328125 50.17822265625Q302.0654296875 52.5439453125 303.18603515625 54.66064453125Q304.306640625 56.77734375 304.0576171875 59.5166015625Q303.80859375 60.5126953125 302.314453125 65.244140625Q300.8203125 69.9755859375 300.322265625 74.9560546875Q299.82421875 79.9365234375 300.0732421875 86.4111328125Q300.0732421875 92.8857421875 300.44677734375 100.97900390625Q300.8203125 109.072265625 302.5634765625 135.84228515625Q304.306640625 162.6123046875 305.302734375 168.33984375L308.291015625 189.755859375L310.78125 208.681640625Q313.5205078125 222.12890625 317.255859375 238.3154296875Q320.9912109375 254.501953125 326.4697265625 275.1708984375Q331.9482421875 295.83984375 336.6796875 305.302734375L343.65234375 320.7421875L355.60546875 345.8935546875Q361.3330078125 355.60546875 366.43798828125 363.94775390625Q371.54296875 372.2900390625 379.2626953125 382.37548828125Q386.982421875 392.4609375 395.44921875 400.927734375Q403.916015625 409.39453125 411.6357421875 415.869140625Q419.35546875 422.34375 424.5849609375 424.21142578125Q429.814453125 426.0791015625 432.3046875 425.0830078125Q435.0439453125 424.0869140625 436.787109375 419.853515625Q438.5302734375 415.6201171875 440.0244140625 410.26611328125Q441.5185546875 404.912109375 444.5068359375 394.951171875Q447.4951171875 384.990234375 450.234375 374.7802734375L453.9697265625 360.8349609375Q454.9658203125 356.6015625 456.708984375 356.72607421875Q458.4521484375 356.8505859375 458.701171875 360.8349609375L459.19921875 376.7724609375Q459.4482421875 388.2275390625 459.9462890625 398.1884765625Q460.4443359375 408.1494140625 461.31591796875 417.73681640625Q462.1875 427.32421875 463.4326171875 437.16064453125Q464.677734375 446.9970703125 466.79443359375 453.59619140625Q468.9111328125 460.1953125 468.4130859375 462.685546875Q467.16796875 467.4169921875 463.681640625 469.03564453125Q460.1953125 470.654296875 455.9619140625 470.654296875Q446.4990234375 470.9033203125 435.16845703125 467.16796875Q423.837890625 463.4326171875 412.3828125 455.21484375Q400.927734375 446.9970703125 388.2275390625 434.296875Q375.52734375 421.5966796875 363.44970703125 406.77978515625Q351.3720703125 391.962890625 345.64453125 381.005859375L336.6796875 365.068359375L324.9755859375 342.158203125Q318.9990234375 328.4619140625 314.267578125 316.0107421875Q309.5361328125 303.5595703125 306.298828125 290.73486328125Q303.0615234375 277.91015625 294.5947265625 238.8134765625L288.8671875 212.666015625L285.380859375 194.736328125",
  "M339.9169921875 95.126953125L353.8623046875 99.3603515625Q362.578125 102.099609375 369.55078125 105.087890625Q376.5234375 108.076171875 382.5 111.18896484375Q388.4765625 114.3017578125 392.4609375 117.41455078125Q396.4453125 120.52734375 398.06396484375 124.13818359375Q399.6826171875 127.7490234375 399.6826171875 133.7255859375Q399.43359375 139.453125 397.56591796875 144.30908203125Q395.6982421875 149.1650390625 392.958984375 151.6552734375Q390.2197265625 154.1455078125 386.7333984375 154.51904296875Q383.2470703125 154.892578125 378.2666015625 151.1572265625Q373.53515625 147.919921875 367.93212890625 140.44921875Q362.3291015625 132.978515625 355.107421875 124.013671875Q347.8857421875 115.048828125 345.64453125 112.3095703125L337.177734375 102.3486328125Q333.193359375 97.8662109375 334.4384765625 95.99853515625Q335.68359375 94.130859375 339.9169921875 95.126953125",
  "M343.65234375 320.7421875Q352.119140625 309.5361328125 357.3486328125 301.69189453125Q362.578125 293.84765625 368.3056640625 282.890625Q374.033203125 271.93359375 376.2744140625 265.08544921875Q378.515625 258.2373046875 378.88916015625 254.00390625Q379.2626953125 249.7705078125 377.7685546875 242.92236328125Q376.2744140625 236.07421875 376.025390625 233.583984375Q375.7763671875 231.09375 377.39501953125 229.47509765625Q379.013671875 227.8564453125 383.7451171875 227.8564453125Q389.970703125 228.10546875 397.44140625 231.591796875Q404.912109375 235.078125 412.75634765625 239.93408203125Q420.6005859375 244.7900390625 423.21533203125 248.525390625Q425.830078125 252.2607421875 425.33203125 254.7509765625Q424.833984375 256.494140625 422.5927734375 258.984375L417.1142578125 264.7119140625Q412.880859375 269.1943359375 409.1455078125 273.80126953125Q405.41015625 278.408203125 400.927734375 284.6337890625L388.7255859375 302.5634765625Q378.017578125 318.251953125 372.041015625 325.4736328125L355.60546875 345.8935546875L336.6796875 365.068359375Q327.71484375 371.7919921875 318.37646484375 378.515625Q309.0380859375 385.2392578125 294.0966796875 393.7060546875Q279.1552734375 402.1728515625 267.7001953125 406.40625Q256.2451171875 410.6396484375 244.541015625 413.876953125L229.8486328125 418.1103515625Q223.8720703125 419.853515625 222.8759765625 417.861328125Q221.8798828125 415.869140625 225.8642578125 413.37890625L239.560546875 404.912109375L255 395.947265625Q267.451171875 388.974609375 285.50537109375 375.90087890625Q303.5595703125 362.8271484375 310.283203125 356.103515625L324.9755859375 342.158203125L343.65234375 320.7421875"
];

const ChineseWritingSystem = () => {
  const svgRef = useRef(null);
  const [currentStroke, setCurrentStroke] = useState(0);
  const [completedStrokes, setCompletedStrokes] = useState([]);
  const [isDrawing, setIsDrawing] = useState(false);
  const [userPath, setUserPath] = useState([]);
  const [showHint, setShowHint] = useState(false);
  const [showGrid, setShowGrid] = useState(true);
  const [message, setMessage] = useState('請開始寫第 1 筆');

  // 獲取鼠標/觸控座標
  const getCoordinates = useCallback((event) => {
    const svg = svgRef.current;
    if (!svg) return { x: 0, y: 0 };
    
    const rect = svg.getBoundingClientRect();
    const clientX = event.clientX || (event.touches && event.touches[0]?.clientX) || 0;
    const clientY = event.clientY || (event.touches && event.touches[0]?.clientY) || 0;
    
    return {
      x: (clientX - rect.left) * (512 / rect.width),
      y: (clientY - rect.top) * (512 / rect.height)
    };
  }, []);

  // 開始繪製
  const handleStart = useCallback((event) => {
    event.preventDefault();
    const coords = getCoordinates(event);
    setIsDrawing(true);
    setUserPath([coords]);
  }, [getCoordinates]);

  // 繪製中
  const handleMove = useCallback((event) => {
    if (!isDrawing) return;
    event.preventDefault();
    const coords = getCoordinates(event);
    setUserPath(prev => [...prev, coords]);
  }, [isDrawing, getCoordinates]);

  // 結束繪製
  const handleEnd = useCallback((event) => {
    event.preventDefault();
    if (!isDrawing) return;
    
    setIsDrawing(false);
    
    // 簡單的筆畫驗證 (這裡可以實現更複雜的軌跡匹配算法)
    if (userPath.length > 5) {
      // 筆畫完成
      setCompletedStrokes(prev => [...prev, currentStroke]);
      setUserPath([]);
      
      if (currentStroke < STROKE_PATHS.length - 1) {
        setCurrentStroke(prev => prev + 1);
        setMessage(`很好！請寫第 ${currentStroke + 2} 筆`);
      } else {
        setMessage('恭喜！你已經完成了"我"字的練習！');
      }
    } else {
      // 筆畫太短，清除
      setUserPath([]);
      setMessage('筆畫太短，請重新嘗試');
    }
  }, [isDrawing, userPath, currentStroke]);

  // 重置練習
  const handleReset = () => {
    setCurrentStroke(0);
    setCompletedStrokes([]);
    setUserPath([]);
    setMessage('請開始寫第 1 筆');
  };

  // 顯示/隱藏提示
  const toggleHint = () => {
    setShowHint(!showHint);
  };

  // 顯示/隱藏格線
  const toggleGrid = () => {
    setShowGrid(!showGrid);
  };

  // 生成用戶繪製路徑的SVG路徑字符串
  const generateUserPathString = (points) => {
    if (points.length === 0) return '';
    
    let pathString = `M${points[0].x},${points[0].y}`;
    for (let i = 1; i < points.length; i++) {
      pathString += `L${points[i].x},${points[i].y}`;
    }
    return pathString;
  };

  return (
    <div className="w-full max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-lg">
      <h1 className="text-3xl font-bold text-center mb-6 text-gray-800">中文筆順練習 - "我"</h1>
      
      {/* 控制按鈕 */}
      <div className="flex flex-wrap gap-3 mb-6 justify-center">
        <button 
          onClick={handleReset}
          className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"
        >
          重新開始
        </button>
        <button 
          onClick={toggleHint}
          className={`px-4 py-2 rounded transition-colors ${
            showHint 
              ? 'bg-orange-500 text-white hover:bg-orange-600' 
              : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
          }`}
        >
          {showHint ? '隱藏提示' : '顯示提示'}
        </button>
        <button 
          onClick={toggleGrid}
          className={`px-4 py-2 rounded transition-colors ${
            showGrid 
              ? 'bg-green-500 text-white hover:bg-green-600' 
              : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
          }`}
        >
          {showGrid ? '隱藏格線' : '顯示格線'}
        </button>
      </div>

      {/* 狀態信息 */}
      <div className="text-center mb-4">
        <p className="text-lg text-gray-700">{message}</p>
        <p className="text-sm text-gray-500">
          進度: {completedStrokes.length}/{STROKE_PATHS.length} 筆
        </p>
      </div>

      {/* SVG 寫字區域 */}
      <div className="border-2 border-gray-300 rounded-lg overflow-hidden bg-gray-100">
        <svg
          ref={svgRef}
          width="100%"
          height="512"
          viewBox="0 0 512 512"
          className="cursor-crosshair touch-none"
          onMouseDown={handleStart}
          onMouseMove={handleMove}
          onMouseUp={handleEnd}
          onMouseLeave={handleEnd}
          onTouchStart={handleStart}
          onTouchMove={handleMove}
          onTouchEnd={handleEnd}
        >
          {/* 背景 */}
          <rect width="512" height="512" fill="#f5f5f5" stroke="#ccc" strokeWidth="2"/>
          
          {/* 格線 */}
          {showGrid && (
            <g stroke="#ddd" strokeWidth="1" strokeDasharray="4,2">
              <line x1="0" y1="256" x2="512" y2="256" />
              <line x1="256" y1="0" x2="256" y2="512" />
            </g>
          )}
          
          {/* 完成的筆畫 */}
          {completedStrokes.map((strokeIndex) => (
            <path
              key={`completed-${strokeIndex}`}
              d={STROKE_PATHS[strokeIndex]}
              fill="none"
              stroke="#000"
              strokeWidth="8"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          ))}
          
          {/* 當前筆畫提示 */}
          {showHint && currentStroke < STROKE_PATHS.length && (
            <path
              key={`hint-${currentStroke}`}
              d={STROKE_PATHS[currentStroke]}
              fill="none"
              stroke="#ff6b6b"
              strokeWidth="6"
              strokeLinecap="round"
              strokeLinejoin="round"
              opacity="0.5"
              strokeDasharray="5,5"
            />
          )}
          
          {/* 用戶繪製的路徑 */}
          {userPath.length > 0 && (
            <path
              d={generateUserPathString(userPath)}
              fill="none"
              stroke="#007bff"
              strokeWidth="6"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          )}
        </svg>
      </div>

      {/* 使用說明 */}
      <div className="mt-6 text-sm text-gray-600 bg-gray-50 p-4 rounded">
        <h3 className="font-semibold mb-2">使用說明：</h3>
        <ul className="space-y-1">
          <li>• 請按照筆順依次書寫每一筆畫</li>
          <li>• 可以使用滑鼠或觸控螢幕進行書寫</li>
          <li>• 點擊"顯示提示"可以看到當前筆畫的參考線</li>
          <li>• 書寫完成後會自動進入下一筆</li>
        </ul>
      </div>
    </div>
  );
};

export default ChineseWritingSystem;